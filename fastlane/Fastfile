# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.22.0"

default_platform :mac

platform :mac do

  before_all do |lane|
  end

  lane :prebuild do
    cocoapods
  end

  lane :postbuild do
    # nada
  end

  lane :release do

    # prep the local state
    ensure_git_status_clean
    ensure_git_branch(branch: "swift-2")
    git_pull

    # regen the changelog and open it
    sh "cd .. && github_changelog_generator -t $GITHUB_TOKEN && subl CHANGELOG.md"

    # assume version from the podspec
    version = read_podspec['source']['tag']

    # ask for info
    title = prompt(text: 'Release Title: ')
    description = prompt(text: "Release changelog: ",
                         multi_line_end_keyword: "END")

    # create a new release on GitHub
    repo_url = "czechboy0/XcodeServerSDK"
    release = set_github_release(
      repository_name: repo_url,
      api_token: ENV["GITHUB_TOKEN"],
      name: [version, title].join(" - "),
      tag_name: version,
      description: description,
      is_draft: false,
      is_prerelease: false
    )

    # release podspec to cocoapods
    sh "cd .. && pod trunk push"

    # notify us on slack
    slack(
      slack_url: ENV['SLACK_RELEASES_URL'],
      message: "Successfully released [XcodeServerSDK #{version}](#{release['html_url']}) :rocket:",
      payload: {
        "New" => release['body']
      }
    )

    # regenerate changelog to get it committed
    sh "cd .. && github_changelog_generator -t $GITHUB_TOKEN"
    sh "cd .. && git commit -am \"changelog\" && git push"

  end

  after_all do |lane|    

    if lane == :postbuild
      slack(
        message: "XcodeServerSDK: Build finished"
      )
    end
  end
 
  error do |lane, exception|
    if lane == :postbuild
      slack(
        message: "XcodeServerSDK: Seems like we have a failing build: #{exception.message}",
        success: false
      )
    end
  end

end

